{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar base = require( '@stdlib/array-base-mskreject' );\nvar countFalsy = require( '@stdlib/array-base-count-falsy' );\nvar zeros = require( '@stdlib/array-zeros' );\nvar dtype = require( '@stdlib/array-dtype' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns a new array by applying a mask to a provided input array.\n*\n* @param {Collection} x - input array\n* @param {Collection} mask - mask array\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a collection\n* @throws {Error} must provide collections of equal length\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var mask = [ 0, 1, 0, 1 ];\n*\n* var y = mskreject( x, mask );\n* // returns [ 1, 3 ]\n*\n* @example\n* var Int32Array = require( '@stdlib/array-int32' );\n*\n* var x = new Int32Array( [ 1, 2, 3, 4 ] );\n* var mask = [ 0, 1, 0, 1 ];\n*\n* var y = mskreject( x, mask );\n* // returns <Int32Array>[ 1, 3 ]\n*/\nfunction mskreject( x, mask ) {\n\tvar dt;\n\tif ( !isCollection( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', x ) );\n\t}\n\tif ( !isCollection( mask ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object. Value: `%s`.', mask ) );\n\t}\n\tif ( x.length !== mask.length ) {\n\t\tthrow new Error( format( 'invalid arguments. Must provide equal length array-like objects.' ) );\n\t}\n\tdt = dtype( x );\n\tif ( dt === 'generic' || dt === null ) {\n\t\treturn base( x, mask );\n\t}\n\treturn base.assign( x, mask, zeros( countFalsy( mask ), dt ), 1, 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = mskreject;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a mask to a provided input array.\n*\n* @module @stdlib/array-mskreject\n*\n* @example\n* var mskreject = require( '@stdlib/array-mskreject' );\n*\n* var x = [ 1, 2, 3, 4 ];\n* var mask = [ 0, 1, 0, 1 ];\n*\n* var y = mskreject( x, mask );\n* // returns [ 1, 3 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAe,QAAS,8BAA+B,EACvDC,EAAO,QAAS,8BAA+B,EAC/CC,EAAa,QAAS,gCAAiC,EACvDC,EAAQ,QAAS,qBAAsB,EACvCC,EAAQ,QAAS,qBAAsB,EACvCC,EAAS,QAAS,uBAAwB,EA+B9C,SAASC,EAAWC,EAAGC,EAAO,CAC7B,IAAIC,EACJ,GAAK,CAACT,EAAcO,CAAE,EACrB,MAAM,IAAI,UAAWF,EAAQ,8EAA+EE,CAAE,CAAE,EAEjH,GAAK,CAACP,EAAcQ,CAAK,EACxB,MAAM,IAAI,UAAWH,EAAQ,+EAAgFG,CAAK,CAAE,EAErH,GAAKD,EAAE,SAAWC,EAAK,OACtB,MAAM,IAAI,MAAOH,EAAQ,kEAAmE,CAAE,EAG/F,OADAI,EAAKL,EAAOG,CAAE,EACTE,IAAO,WAAaA,IAAO,KACxBR,EAAMM,EAAGC,CAAK,EAEfP,EAAK,OAAQM,EAAGC,EAAML,EAAOD,EAAYM,CAAK,EAAGC,CAAG,EAAG,EAAG,CAAE,CACpE,CAKAV,EAAO,QAAUO,IC1CjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isCollection", "base", "countFalsy", "zeros", "dtype", "format", "mskreject", "x", "mask", "dt", "main"]
}
